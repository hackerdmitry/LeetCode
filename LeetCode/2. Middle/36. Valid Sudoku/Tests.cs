using LeetCode.Extensions;
using NUnit.Framework;

namespace LeetCode._2._Middle._36._Valid_Sudoku;

[TestFixture(TestName = "36. Valid Sudoku")]
public class Tests
{
    [Timeout(1000)]
    [TestCase(@"
[['5','3','.','.','7','.','.','.','.']
,['6','.','.','1','9','5','.','.','.']
,['.','9','8','.','.','.','.','6','.']
,['8','.','.','.','6','.','.','.','3']
,['4','.','.','8','.','3','.','.','1']
,['7','.','.','.','2','.','.','.','6']
,['.','6','.','.','.','.','2','8','.']
,['.','.','.','4','1','9','.','.','5']
,['.','.','.','.','8','.','.','7','9']]", true)]
    [TestCase(@"
[['8','3','.','.','7','.','.','.','.']
,['6','.','.','1','9','5','.','.','.']
,['.','9','8','.','.','.','.','6','.']
,['8','.','.','.','6','.','.','.','3']
,['4','.','.','8','.','3','.','.','1']
,['7','.','.','.','2','.','.','.','6']
,['.','6','.','.','.','.','2','8','.']
,['.','.','.','4','1','9','.','.','5']
,['.','.','.','.','8','.','.','7','9']]", false)]
    public void Test(string input, bool output)
    {
        var solution = new Solution();
        var actual = solution.IsValidSudoku(input.ParseCharArray2d());
        Assert.AreEqual(output, actual);
    }
}